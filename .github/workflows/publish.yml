name: Publish to NPM

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate package.json
      run: |
        echo "Validating package.json structure..."
        npm pkg get name version description
        
    - name: Validate git tag matches package version
      run: |
        PACKAGE_VERSION=$(npm pkg get version | tr -d '"')
        GIT_TAG=${GITHUB_REF#refs/tags/}
        echo "Package version: $PACKAGE_VERSION"
        echo "Git tag: $GIT_TAG"
        if [[ "$GIT_TAG" != "v$PACKAGE_VERSION" && "$GIT_TAG" != "$PACKAGE_VERSION" ]]; then
          echo "❌ Git tag ($GIT_TAG) does not match package version (v$PACKAGE_VERSION)"
          exit 1
        fi
        echo "✅ Version validation passed"
        
    - name: Run type checking
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Build project
      run: npm run build
      
    - name: Verify build output
      run: |
        echo "Verifying dist directory..."
        ls -la dist/
        test -f dist/index.js || (echo "❌ dist/index.js not found" && exit 1)
        test -f dist/cli.js || (echo "❌ dist/cli.js not found" && exit 1)
        echo "✅ Build verification passed"
        
    - name: Test package installation locally
      run: |
        npm pack
        PACKAGE_FILE=$(ls *.tgz)
        echo "Testing local installation of $PACKAGE_FILE"
        npm install -g "$PACKAGE_FILE"
        which context-mcp || (echo "❌ CLI not installed globally" && exit 1)
        context-mcp --help
        echo "✅ Package installation test passed"
        
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub release assets
      run: |
        npm pack
        mv *.tgz context-continue-mcp-${{ github.event.release.tag_name }}.tgz
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./context-continue-mcp-${{ github.event.release.tag_name }}.tgz
        asset_name: context-continue-mcp-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/gzip
        
    - name: Verify npm publication
      run: |
        echo "Waiting for npm registry propagation..."
        sleep 30
        PACKAGE_NAME=$(npm pkg get name | tr -d '"')
        PACKAGE_VERSION=$(npm pkg get version | tr -d '"')
        npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version || (echo "❌ Package not found on npm registry" && exit 1)
        echo "✅ Package successfully published to npm"